/* Generated By:JavaCC: Do not edit this line. DotGrammarConstants.java */
package grammatica;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DotGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DUE_PUNTI = 5;
  /** RegularExpression Id. */
  int MAGGIORE = 6;
  /** RegularExpression Id. */
  int UGUALE = 7;
  /** RegularExpression Id. */
  int VIRGOLA = 8;
  /** RegularExpression Id. */
  int MINORE = 9;
  /** RegularExpression Id. */
  int PUNTO_E_VIRGOLA = 10;
  /** RegularExpression Id. */
  int PARENTESI_QUADRA_APERTA = 11;
  /** RegularExpression Id. */
  int PARENTESI_QUADRA_CHIUSA = 12;
  /** RegularExpression Id. */
  int PARENTESI_GRAFFA_APERTA = 13;
  /** RegularExpression Id. */
  int PARENTESI_GRAFFA_CHIUSA = 14;
  /** RegularExpression Id. */
  int ARCO = 15;
  /** RegularExpression Id. */
  int BACKSLASH = 16;
  /** RegularExpression Id. */
  int NODE = 17;
  /** RegularExpression Id. */
  int EDGE = 18;
  /** RegularExpression Id. */
  int DIGRAPH = 19;
  /** RegularExpression Id. */
  int DIGRAPH_ = 20;
  /** RegularExpression Id. */
  int GRAPH = 21;
  /** RegularExpression Id. */
  int SUBGRAPH = 22;
  /** RegularExpression Id. */
  int STRICT = 23;
  /** RegularExpression Id. */
  int RANKDIR = 24;
  /** RegularExpression Id. */
  int STYLE = 25;
  /** RegularExpression Id. */
  int COLOR = 26;
  /** RegularExpression Id. */
  int FONTSIZE = 27;
  /** RegularExpression Id. */
  int FILLCOLOR = 28;
  /** RegularExpression Id. */
  int HEIGHT = 29;
  /** RegularExpression Id. */
  int WIDTH = 30;
  /** RegularExpression Id. */
  int URL = 31;
  /** RegularExpression Id. */
  int LABEL = 32;
  /** RegularExpression Id. */
  int SHAPE = 33;
  /** RegularExpression Id. */
  int FONTNAME = 34;
  /** RegularExpression Id. */
  int FONTCOLOR = 35;
  /** RegularExpression Id. */
  int LABELFONTSIZE = 36;
  /** RegularExpression Id. */
  int LABELFONTNAME = 37;
  /** RegularExpression Id. */
  int BGCOLOR = 38;
  /** RegularExpression Id. */
  int PENCOLOR = 39;
  /** RegularExpression Id. */
  int DIR = 40;
  /** RegularExpression Id. */
  int TOOLTIP = 41;
  /** RegularExpression Id. */
  int DIGITS = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;
  /** RegularExpression Id. */
  int LETTER = 44;
  /** RegularExpression Id. */
  int ESCAPED_QUOTES = 45;
  /** RegularExpression Id. */
  int ID = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\":\"",
    "\">\"",
    "\"=\"",
    "\",\"",
    "\"<\"",
    "\";\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"->\"",
    "\"\\\"\"",
    "<NODE>",
    "<EDGE>",
    "<DIGRAPH>",
    "<DIGRAPH_>",
    "<GRAPH>",
    "<SUBGRAPH>",
    "<STRICT>",
    "<RANKDIR>",
    "\"style\"",
    "\"color\"",
    "\"fontsize\"",
    "\"fillcolor\"",
    "\"height\"",
    "\"width\"",
    "\"URL\"",
    "\"label\"",
    "\"shape\"",
    "\"fontname\"",
    "\"fontcolor\"",
    "\"labelfontsize\"",
    "\"labelfontname\"",
    "\"bgcolor\"",
    "\"pencolor\"",
    "\"dir\"",
    "\"tooltip\"",
    "<DIGITS>",
    "<DIGIT>",
    "<LETTER>",
    "<ESCAPED_QUOTES>",
    "<ID>",
  };

}
